{"version":3,"sources":["features/tabProfile/tabProfile.jsx","components/iconLike/iconLike.jsx","features/itemComment/itemComment.jsx","features/post/post.jsx"],"names":["TabPane","Tabs","TabProfile","props","idUser","console","log","a","listPost","map","item","index","time","countLike","formatTime","moment","format","name","status","content","count","friend","idPost","_id","comment","avatar","useState","listFollow","setListFollow","useEffect","axios","get","then","res","data","list","catch","err","className","defaultActiveKey","centered","tab","urlProfile","userId","to","width","height","url","IconLike","onClick","offset","href","ItemComment","flagDelComment","setFlagDelComment","alert","useAlert","isFriend","Axios","post","postId","commentId","id","show","Post","flagDelPost","setFlagDelPost","setCountLike","setCommnet","useSelector","state","user","listComment","setListComment","handleLike","icon","faTrash","type","placeholder","onChange","e","target","value","onKeyPress","event","key","postRes","timeComment"],"mappings":"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","file":"static/js/9.53057505.chunk.js","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"./style.scss\";\r\nimport Avatar from \"../../components/avatar/avatar\";\r\nimport Post from \"../post/post\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function TabProfile(props) {\r\n  // const [listpost, setListpost] = useState([]);\r\n  const idUser = props.idUser;\r\n  console.log(idUser);\r\n  let listpost = props.listPost;\r\n  let a =\"\";\r\n  a = listpost.map((item, index) => {\r\n    let time = item.time;\r\n    console.log(index,item.countLike)\r\n    let formatTime = moment(time).format(\"DD-MM-YYYY hh:mm a\");\r\n    return (\r\n      <Post\r\n        key={index}\r\n        name={item.name}\r\n        status={item.content}\r\n        time={formatTime}\r\n        count={item.countLike}\r\n        friend={props.friend}\r\n        idPost={item._id}\r\n        comment={item.comment}\r\n        avatar={item.avatar}\r\n      />\r\n    );\r\n  });\r\n  // const userId = useSelector((state) => state.user.userId);\r\n  const [listFollow, setListFollow] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"effect\")\r\n    axios\r\n      .get(\"/user/getfollow/\" + idUser)\r\n      .then((res) => {\r\n        setListFollow(res.data.list);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },[idUser]);\r\n  return (\r\n    <div className=\"tab-profile\">\r\n      <Tabs defaultActiveKey=\"1\" centered>\r\n        <TabPane tab=\"POSTS\" key=\"1\">\r\n          <div className=\"post\">\r\n            {a}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"FOLLOWING\" key=\"2\">\r\n          <div className=\"d-flex\">\r\n            {listFollow.map((item, index) => {\r\n              let urlProfile = `/profile/${item.userId}`;\r\n              return (\r\n                <div>\r\n                  <Link to={urlProfile} key={index}>\r\n                    <Avatar width={40} height={40} url={`/uploads/${item.avatar}`}/>\r\n                    <span className=\"text-center text-dark\">{item.name}</span>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"FOLLOWERS\" key=\"3\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n      </Tabs>\r\n      {/* {\r\n        test.map((item,index)=>{\r\n          return(\r\n<p>{item}</p>\r\n          )\r\n          \r\n        })\r\n      } */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Badge } from \"antd\";\r\nimport \"./style.scss\";\r\n\r\nexport default function IconLike(props) {\r\n  return (\r\n    <div className=\"like\">\r\n      <button onClick={props.onClick}>Thích</button>\r\n      <Badge count={props.count} offset={[-10, -20]}>\r\n        <a href=\"#\" className=\"head-example\" />\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Avatar from \"../../components/avatar/avatar\";\r\nimport \"./style.scss\";\r\n\r\nexport default function ItemComment(props) {\r\n  const [flagDelComment,setFlagDelComment] = useState(0);\r\n  const alert = useAlert();\r\n  const handleDeleteComment = ()=>{\r\n    Axios.post(\"/post/delcomment\",{\r\n      postId: props.postId,\r\n      commentId: props.id\r\n    }).then(res=>{\r\n      if(res.data.status===\"success\"){\r\n        setFlagDelComment(1);\r\n        alert.show(\"Comment Deleted\");\r\n      }\r\n      else{\r\n        alert.show(\"ERROR\");\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n  return (\r\n    flagDelComment===0?(\r\n      <div className=\"d-flex item-comment border-bottom border-secondary pb-1 pt-2\">\r\n      <Avatar width={40} height={40} url={`/uploads/${props.avatar}`}/>\r\n      <div className=\"pl-1 pr-1\">\r\n        <span className=\"name-comment\">{props.name}</span>\r\n        <br />\r\n        <span className=\"c-comment\">{props.content}</span>\r\n        <br />\r\n        <span className=\"time\">{props.time}</span>\r\n        <br/>\r\n        {\r\n          props.isFriend===0?<span className=\"comment-del\" onClick={()=>handleDeleteComment()}>Xóa</span>:\"\"\r\n        }\r\n      </div>\r\n    </div>\r\n    ):\"\"\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Avatar from \"../../components/avatar/avatar\";\r\nimport IconLike from \"../../components/iconLike/iconLike\";\r\nimport ItemComment from \"../itemComment/itemComment\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Post(props) {\r\n  const idPost = props.idPost;\r\n  const [flagDelPost, setFlagDelPost] = useState(false);\r\n  const [countLike, setCountLike] = useState(props.count);\r\n  const [comment, setCommnet] = useState(\"\");\r\n  const userId = useSelector((state) => state.user.userId);\r\n  const name = useSelector((state) => state.user.name);\r\n  const avatar = useSelector((state) => state.user.avatar);\r\n  const [listComment, setListComment] = useState(props.comment);\r\n  const alert = useAlert();\r\n  const handleLike = async () => {\r\n    // await setCountLike(countLike + 1);\r\n    axios\r\n      .post(\"/post/like\", {\r\n        postId: idPost,\r\n        countLike: countLike + 1,\r\n      })\r\n      .then((res) => {\r\n        setCountLike(countLike + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleDelPost = () => {\r\n    axios.post(\"/post/delpost\", { postId: idPost }).then((res) => {\r\n      if (res.data.status === \"success\") {\r\n        setFlagDelPost(true);\r\n        alert.show(\"Post deleted\");\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleAddComment = (event) => {\r\n    if (comment !== \"\") {\r\n      if (event.key === \"Enter\") {\r\n        axios\r\n          .post(\"/post/addcomment\", {\r\n            userId: userId,\r\n            comment: comment,\r\n            name: name,\r\n            postId: idPost,\r\n            avatar:avatar\r\n          })\r\n          .then((res) => {\r\n            setListComment(res.data.postRes);\r\n          })\r\n          .then((res) => {\r\n            setCommnet(\"\");\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {flagDelPost === true ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"new-feed border mt-2\">\r\n          <div className=\"header-new-feed p-2 d-flex\">\r\n            <div className=\"d-flex info\">\r\n              <Avatar width={40} height={40} url={`/uploads/${props.avatar}`}/>\r\n              <div className=\"name ml-1 mr-1\">\r\n                <span className=\"name-x\">{props.name}</span>\r\n                <br />\r\n                <span>{props.time}</span>\r\n              </div>\r\n            </div>\r\n            {props.friend === 0 ? (\r\n              <div className=\"icon-del\" onClick={() => handleDelPost()}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"c-newfeed p-2 bg-light\">\r\n            <p className=\"status\">{props.status}</p>\r\n            <div className=\"list-emoji d-flex\">\r\n              <IconLike count={countLike} onClick={() => handleLike()} />\r\n            </div>\r\n          </div>\r\n          <div className=\"comment pl-2 pt-4 pr-2 d-flex\">\r\n            <Avatar width={40} height={40} url={`/uploads/${props.avatar}`}/>\r\n            <div className=\"input-comment ml-2\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add comment\"\r\n                className=\"p-2\"\r\n                onChange={(e) => setCommnet(e.target.value)}\r\n                value={comment}\r\n                onKeyPress={(e) => handleAddComment(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"comment pl-2 pt-4 pb-4 pr-2\">\r\n            {listComment.map((item, index) => {\r\n              let friend = 1;\r\n              if (item.userId === userId) friend = 0;\r\n              return (\r\n                <ItemComment\r\n                  name={item.name}\r\n                  content={item.content}\r\n                  time={item.timeComment}\r\n                  key={index}\r\n                  isFriend={friend}\r\n                  id={item._id}\r\n                  postId={idPost}\r\n                  avatar={item.avatar}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}